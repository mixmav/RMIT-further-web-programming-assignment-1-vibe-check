{"version":3,"sources":["img/svg/laptop.svg","img/svg/reading-book.svg","App/Router/Home/Home.js","Context/AuthContext.js","Context/UserDatastoreContext.js","App/Router/SignIn/SignIn.js","App/Router/SignUp/SignUp.js","App/Router/Logout/Logout.js","Context/PostDatastoreContext.js","App/Router/Profile/EditProfileDialog.js","App/Common/Avatar/Avatar.js","App/Router/Profile/Profile.js","img/svg/image-preview.svg","App/Router/Posts/ChoosePictureDialog.js","App/Router/Posts/NewPost.js","App/Router/Posts/EditPostDialog.js","App/Router/Posts/IndividualPost.js","App/Router/Posts/Posts.js","App/Router/RouterSwitch.js","App/TopBar.js","App/App.js","reportWebVitals.js","index.js"],"names":["Home","className","src","readingBookSVG","alt","style","textAlign","laptopSVG","to","AuthContext","React","createContext","AuthUpdateContext","useAuth","useContext","useAuthUpdate","AuthProvider","children","useState","auth","email","setAuth","Provider","value","newUser","UserDatastoreContext","UserDatastorePushContext","UserDatastorePullContext","UserDatastoreUpdateUserContext","useUserDatastore","UserDatastoreProvider","emailToPull","setEmailToPull","isFirstRender","useRef","userDatastore","setUserDatastore","useEffect","current","result","_","without","find","state","user","SignIn","updateAuth","userEmail","setUserEmail","userPassword","setUserPassword","onSubmit","event","preventDefault","matchedUser","object","undefined","password","alert","onChange","e","target","type","name","placeholder","required","autoFocus","SignUp","pushToUserDatastore","userName","setUserName","length","match","createdAt","Date","toDateString","Logout","PostDatastoreContext","PostDatastorePushContext","PostDatastorePullContext","PostDatastoreUpdatePostContext","usePostDatastorePull","PostDatastoreProvider","postIdToPull","setPostIdToPull","postDatastore","setPostDatastore","post_id","post","index","id","allFromUser","filter","user_id","EditProfileDialog","props","containerRef","newPasswordRef","oldPasswordRef","updateUserInUserDatastore","oldPassword","setOldPassword","newPassword","setNewPassword","updateName","trim","updatedUser","onClick","contains","toggleVisible","ref","onKeyDown","keyCode","Avatar","size","hashString","seed","str","hash","i","charCodeAt","Uint32Array","toString","Profile","pullFromUserDatastore","pullFromPostDatastore","userCreatedAt","setUserCreatedAt","editProfileDialogVisible","setEditProfileDialogVisible","visible","window","confirm","ChoosePictureDialog","imgURLInput","setImgURLInput","generatedImgURL","setGeneratedImgURL","imgLoadError","setImgLoadError","onLoad","onError","imagePreviewSVG","setPostImgSrc","NewPost","textareaRef","postText","setPostText","pushToPostDatastore","choosePictureDialogVisible","setChoosePictureDialogVisible","postImageSrc","truncate","getTime","EditPostDialog","content","img","updatePostInDatastore","postUser","IndividualPost","editPostDialogVisible","setEditPostDialogVisible","Posts","showOwnPostsOnly","updateShowOwnPostsOnly","userOwnPostDatastore","updateUserOwnPostDatastore","checked","map","key","RouterSwitch","path","TopBar","App","getFullYear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01fa98bc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/laptop.c622269c.svg\";","export default __webpack_public_path__ + \"static/media/reading-book.02432d95.svg\";","import './Home.scss';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport laptopSVG from 'img/svg/laptop.svg';\r\nimport readingBookSVG from 'img/svg/reading-book.svg';\r\n\r\nfunction Home() {\r\n\treturn (\r\n\t\t<div className=\"router-page-home-container\">\r\n\t\t\t<section>\r\n\t\t\t\t<img src={readingBookSVG} alt=\"Person reading a book\" />\r\n\t\t\t\t<h1 className=\"mt-20\" style={{textAlign: 'center'}}>Welcome to Vibe Check!</h1>\r\n\t\t\t\t<p className=\"mt-10\">Vibe check is your one stop shop to liase with fellow students to discuss  questions, queries, issues and suggestions about the courses they are studying.</p>\r\n\t\t\t\t\r\n\t\t\t\t<img className=\"mt-30\" src={laptopSVG} alt=\"Laptop\" />\r\n\t\t\t\t<h1 className=\"mt-30\">What can you do on Vibe Check?</h1>\r\n\t\t\t\t<p className=\"mt-10\">You can create your profile, make and edit posts, reply to other posts, and edit your profile. <Link to=\"/profile\">Get started</Link>.</p>\r\n\t\t\t\t<br />\r\n\t\t\t</section>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Home;\r\n","import React, { useContext, useState } from \"react\";\r\n\r\nconst AuthContext = React.createContext();\r\nconst AuthUpdateContext = React.createContext();\r\n\r\nexport function useAuth(){\r\n\treturn useContext(AuthContext);\r\n}\r\n\r\nexport function useAuthUpdate(){\r\n\treturn useContext(AuthUpdateContext);\r\n}\r\n\r\nexport function AuthProvider({ children }){\r\n\tconst [auth, setAuth] = useState({\r\n\t\tauth: true,\r\n\t\temail: 'manav.sg1@gmail.com',\r\n\t});\r\n\r\n\tfunction updateAuth(newUser){\r\n\t\tsetAuth(newUser);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AuthContext.Provider value={auth}>\r\n\t\t\t<AuthUpdateContext.Provider value={updateAuth}>\r\n\t\t\t\t{children}\r\n\t\t\t</AuthUpdateContext.Provider>\r\n\t\t</AuthContext.Provider>\r\n\t);\r\n}","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport _ from 'lodash';\r\n\r\nconst UserDatastoreContext = React.createContext();\r\nconst UserDatastorePushContext = React.createContext();\r\nconst UserDatastorePullContext = React.createContext();\r\nconst UserDatastoreUpdateUserContext = React.createContext();\r\n\r\nexport function useUserDatastore(){\r\n\treturn useContext(UserDatastoreContext);\r\n}\r\n\r\nexport function useUserDatastorePush(){\r\n\treturn useContext(UserDatastorePushContext);\r\n}\r\n\r\nexport function useUserDatastorePull(){\r\n\treturn useContext(UserDatastorePullContext);\r\n}\r\n\r\nexport function useUserDatastoreUpdateUser(){\r\n\treturn useContext(UserDatastoreUpdateUserContext);\r\n}\r\n\r\nexport function UserDatastoreProvider({ children }){\r\n\tconst [emailToPull, setEmailToPull] = useState(null);\r\n\tconst isFirstRender = useRef(true);\r\n\r\n\tconst [userDatastore, setUserDatastore] = useState([\r\n\t\t{\r\n\t\t\t\"name\": \"Manav Singh Gadhoke\",\r\n\t\t\t\"email\": \"manav.sg1@gmail.com\",\r\n\t\t\t\"password\": \"123\",\r\n\t\t\t\"createdAt\": \"Thu Sep 23 2021\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"Manav too\",\r\n\t\t\t\"email\": \"manav.sg1@gmail.comm\",\r\n\t\t\t\"password\": \"123\",\r\n\t\t\t\"createdAt\": \"Thu Sep 23 2021\"\r\n\t\t}\r\n\t]);\r\n\r\n\r\n\t/*\r\n\t\tthis method controls when the \"old\" user is pulled from the user datastore.\r\n\t\tIt does so by using the isFirstRender flag.\r\n\t\tIt's done this way to make sure the state is up-to-date before performing the operation.\r\n\t*/\r\n\tuseEffect(() => {\r\n\t\tif (isFirstRender.current) {\r\n\t\t\tisFirstRender.current = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (emailToPull !== null) {\r\n\t\t\tlet result = _.without(userDatastore, _.find(userDatastore, {\r\n\t\t\t\temail: emailToPull,\r\n\t\t\t}));\r\n\r\n\t\t\tsetUserDatastore((state) => {\r\n\t\t\t\treturn result;\r\n\t\t\t});\r\n\r\n\t\t\tsetEmailToPull(null);\r\n\t\t}\r\n\t}, [emailToPull, userDatastore]);\r\n\r\n\tconst pushUserDatastore = (user) => {\r\n\t\tsetUserDatastore(\r\n\t\t\t() => {\r\n\t\t\t\treturn [...userDatastore, user];\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tconst pullUserDatastore = (email) => {\r\n\t\tsetEmailToPull(email);\r\n\t}\r\n\r\n\tconst updateUserInDatastore = (user) => {\r\n\t\tsetUserDatastore(\r\n\t\t\t() => {\r\n\t\t\t\tsetEmailToPull(user.email);\r\n\t\t\t\treturn [...userDatastore, user];\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<UserDatastoreContext.Provider value={userDatastore}>\r\n\t\t\t<UserDatastorePushContext.Provider value={pushUserDatastore}>\r\n\t\t\t\t<UserDatastorePullContext.Provider value={pullUserDatastore}>\r\n\t\t\t\t\t<UserDatastoreUpdateUserContext.Provider value={updateUserInDatastore}>\r\n\t\t\t\t\t\t{children}\r\n\t\t\t\t\t</UserDatastoreUpdateUserContext.Provider>\r\n\t\t\t\t</UserDatastorePullContext.Provider>\r\n\t\t\t</UserDatastorePushContext.Provider>\r\n\t\t</UserDatastoreContext.Provider>\r\n\t);\r\n}","import { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useAuth, useAuthUpdate } from 'Context/AuthContext';\r\nimport { useUserDatastore } from 'Context/UserDatastoreContext';\r\n\r\nimport './SignIn.scss';\r\n\r\nfunction SignIn() {\r\n\tconst auth = useAuth();\r\n\tconst updateAuth = useAuthUpdate();\r\n\r\n\tconst userDatastore = useUserDatastore();\r\n\r\n\tconst [userEmail, setUserEmail] = useState(\"\");\r\n\tconst [userPassword, setUserPassword] = useState(\"\");\r\n\r\n\tconst attemptLogin = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\t// Check if user exists\r\n\t\tlet matchedUser = userDatastore.find(object => object.email === userEmail);\r\n\r\n\t\tif (matchedUser !== undefined) {\r\n\t\t\t// User exists, check if password is correct\r\n\t\t\tif (matchedUser.password === userPassword) {\r\n\t\t\t\t// Password correct, log the user in.\r\n\t\t\t\tupdateAuth({\r\n\t\t\t\t\tauth: true,\r\n\t\t\t\t\temail: userEmail,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\talert(\"The password doesn't match our records.\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\talert(\"No user with that email address was found.\");\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"router-page-signin-container\">\r\n\t\t\t{\r\n\t\t\t\tauth.auth && // If user is authenticated, redirect to the profile page\r\n\t\t\t\t<Redirect to=\"/profile\"></Redirect>\r\n\t\t\t}\r\n\t\t\t<span>\r\n\t\t\t\t<h1>Sign in</h1>\r\n\t\t\t\t<form onSubmit={attemptLogin} className=\"mt-10\">\r\n\t\t\t\t\t<input onChange={e => setUserEmail(e.target.value)} className=\"text-input full-width\" type=\"email\" name=\"email\" placeholder=\"Email\" required autoFocus />\r\n\t\t\t\t\t<input onChange={e => setUserPassword(e.target.value)} className=\"text-input full-width mt-10\" type=\"password\" name=\"password\" placeholder=\"Password\" required />\r\n\t\t\t\t\t<button className=\"btn full-width mt-20\"><i className=\"fa fa-sign-in-alt\"></i>Sign in</button>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// If the user is authenticated, redirect to the profile page.\r\n\t\t\t\t\t\tauth.auth && <Redirect to=\"/profile\"></Redirect>\r\n\t\t\t\t\t}\r\n\t\t\t\t</form>\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SignIn;\r\n","import { useState } from 'react';\r\nimport { useAuth, useAuthUpdate } from 'Context/AuthContext';\r\nimport {\r\n\tuseUserDatastore,\r\n\tuseUserDatastorePush \r\n} from 'Context/UserDatastoreContext';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport './SignUp.scss';\r\n\r\nfunction SignUp() {\r\n\tconst auth = useAuth();\r\n\tconst updateAuth = useAuthUpdate();\r\n\r\n\tconst userDatastore = useUserDatastore();\r\n\tconst pushToUserDatastore = useUserDatastorePush();\r\n\r\n\tconst [userName, setUserName] = useState(\"\");\r\n\tconst [userEmail, setUserEmail] = useState(\"\");\r\n\tconst [userPassword, setUserPassword] = useState(\"\");\r\n\r\n\tconst validateForm = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tif(\r\n\t\t\t// false\r\n\t\t\tuserPassword.length < 6 || // Is at least 6 characters long\r\n\t\t\t!userPassword.match(/[a-z]/) || // Contains at least 1 lowercase letter\r\n\t\t\t!userPassword.match(/[A-Z]/) || // Contains at least 1 uppercase letter\r\n\t\t\t!userPassword.match(/[0-9]/) || // Contains at least one number\r\n\t\t\t!userPassword.match(/[\\W_]/) // Contains at least one special character including an underscore\r\n\t\t){\r\n\t\t\talert('Password needs to be at least 6 characters including uppercase, lowercase characters, and a number and a punctuation.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Check if user's email is unique\r\n\t\tif (userDatastore.find(object => object.email === userEmail) !== undefined) {\r\n\t\t\t// A match was found, meaning the email is not unique, alert the user and return.\r\n\t\t\talert(\"This email address has already been registered!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\r\n\t\t// Valid user, sign them up, sign them in, and redirect to the profile page\r\n\r\n\t\tupdateAuth({\r\n\t\t\tauth: true,\r\n\t\t\temail: userEmail,\r\n\t\t});\r\n\r\n\t\tpushToUserDatastore({\r\n\t\t\tname: userName,\r\n\t\t\temail: userEmail,\r\n\t\t\tpassword: userPassword,\r\n\t\t\tcreatedAt: new Date().toDateString(),\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"router-page-signup-container\">\r\n\t\t\t{\r\n\t\t\t\tauth.auth && // If user is authenticated, redirect to the profile page\r\n\t\t\t\t<Redirect to=\"/profile\"></Redirect>\r\n\t\t\t}\r\n\t\t\t<span>\r\n\t\t\t\t<h1>Sign up</h1>\r\n\t\t\t\t<form onSubmit={validateForm} className=\"mt-10\">\r\n\t\t\t\t\t<input onChange={e => setUserName(e.target.value)} className=\"text-input full-width\" type=\"text\" name=\"name\" placeholder=\"Name\" autoFocus />\r\n\t\t\t\t\t<input onChange={e => setUserEmail(e.target.value)} className=\"text-input full-width mt-10\" type=\"email\" name=\"email\" placeholder=\"Email\" />\r\n\t\t\t\t\t<input onChange={e => setUserPassword(e.target.value)} className=\"text-input full-width mt-10\" type=\"password\" name=\"password\" placeholder=\"Password\"/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button className=\"btn full-width mt-20\"><i className=\"fa fa-user-plus\"></i>Sign up</button>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// If the user is authenticated, redirect to the profile page.\r\n\t\t\t\t\t\tauth.auth && <Redirect to=\"/profile\"></Redirect>\r\n\t\t\t\t\t}\r\n\t\t\t\t</form>\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n}\r\n\r\nexport default SignUp;","import { useAuthUpdate } from 'Context/AuthContext';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\n\r\nfunction Logout(){\r\n\tconst updateAuth = useAuthUpdate();\r\n\t\r\n\tuseEffect(() => {\r\n\t\tupdateAuth({auth: false, email: null});\r\n\t}, [updateAuth]); // Only run once.\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<Redirect to=\"/\"></Redirect>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Logout;","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport _ from 'lodash';\r\n\r\nconst PostDatastoreContext = React.createContext();\r\nconst PostDatastorePushContext = React.createContext();\r\nconst PostDatastorePullContext = React.createContext();\r\nconst PostDatastoreUpdatePostContext = React.createContext();\r\n\r\nexport function usePostDatastore(){\r\n\treturn useContext(PostDatastoreContext);\r\n}\r\n\r\nexport function usePostDatastorePush(){\r\n\treturn useContext(PostDatastorePushContext);\r\n}\r\n\r\nexport function usePostDatastorePull(){\r\n\treturn useContext(PostDatastorePullContext);\r\n}\r\n\r\nexport function usePostDatastoreUpdatePost(){\r\n\treturn useContext(PostDatastoreUpdatePostContext);\r\n}\r\n\r\nexport function PostDatastoreProvider({ children }){\r\n\tconst [postIdToPull, setPostIdToPull] = useState(null);\r\n\tconst isFirstRender = useRef(true);\r\n\r\n\tconst [postDatastore, setPostDatastore] = useState([\r\n\t\t{\r\n\t\t\t\"post_id\": \"manav.sg1@gmail.com1\",\r\n\t\t\t\"user_id\": \"manav.sg1@gmail.com\",\r\n\t\t\t\"content\": \"123\",\r\n\t\t\t\"img\": \"https://spy.com/wp-content/uploads/2020/12/CleanClipping-Recovered-10.png?w=958&h=599&crop=1\",\r\n\t\t\t\"createdAt\": \"Thu Sep 23 2021\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"post_id\": \"manav.sg1@gmail.com2\",\r\n\t\t\t\"user_id\": \"manav.sg1@gmail.com\",\r\n\t\t\t\"content\": \"123\",\r\n\t\t\t\"replyOf\": \"manav.sg1@gmail.com1\",\r\n\t\t\t\"createdAt\": \"Thu Sep 23 2021\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"post_id\": \"manav.sg1@gmail.comm1\",\r\n\t\t\t\"user_id\": \"manav.sg1@gmail.comm\",\r\n\t\t\t\"content\": \"New post 2\",\r\n\t\t\t\"createdAt\": \"Thu Sep 23 2021\"\r\n\t\t}\r\n\t]);\r\n\r\n\r\n\t/*\r\n\t\tthis method controls when the \"old\" post is pulled from the post datastore.\r\n\t\tIt does so by using the isFirstRender flag.\r\n\t\tIt's done this way to make sure the state is up-to-date before performing the operation.\r\n\t*/\r\n\tuseEffect(() => {\r\n\t\tif (isFirstRender.current) {\r\n\t\t\tisFirstRender.current = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (postIdToPull !== null) {\r\n\t\t\tlet result = _.without(postDatastore, _.find(postDatastore, {\r\n\t\t\t\tpost_id: postIdToPull,\r\n\t\t\t}));\r\n\r\n\t\t\tsetPostDatastore((state) => {\r\n\t\t\t\treturn result;\r\n\t\t\t});\r\n\r\n\t\t\tsetPostIdToPull(null);\r\n\t\t}\r\n\t}, [postIdToPull, postDatastore]);\r\n\r\n\tconst pushPostDatastore = (post, index = false) => {\r\n\t\tif (!index) {\r\n\t\t\tsetPostDatastore(\r\n\t\t\t\t() => {\r\n\t\t\t\t\treturn [...postDatastore, post];\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} else {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tconst pullPostDatastore = (id, allFromUser = false) => {\r\n\t\tif (allFromUser) {\r\n\t\t\tlet result = _.filter(postDatastore, (post) => {\r\n\t\t\t\treturn post.user_id !== id;\r\n\t\t\t});\r\n\r\n\t\t\tsetPostDatastore((state) => {\r\n\t\t\t\treturn result;\r\n\t\t\t});\r\n\r\n\t\t} else {\r\n\t\t\tlet result = _.filter(postDatastore, (post) => {\r\n\t\t\t\treturn post.post_id !== id;\r\n\t\t\t});\r\n\t\r\n\t\t\tsetPostDatastore((state) => {\r\n\t\t\t\treturn result;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tconst updatePostInDatastore = (post) => {\r\n\t\tsetPostDatastore(\r\n\t\t\t() => {\r\n\t\t\t\tsetPostIdToPull(post.post_id);\r\n\t\t\t\treturn [...postDatastore, post];\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<PostDatastoreContext.Provider value={postDatastore}>\r\n\t\t\t<PostDatastorePushContext.Provider value={pushPostDatastore}>\r\n\t\t\t\t<PostDatastorePullContext.Provider value={pullPostDatastore}>\r\n\t\t\t\t\t<PostDatastoreUpdatePostContext.Provider value={updatePostInDatastore}>\r\n\t\t\t\t\t\t{children}\r\n\t\t\t\t\t</PostDatastoreUpdatePostContext.Provider>\r\n\t\t\t\t</PostDatastorePullContext.Provider>\r\n\t\t\t</PostDatastorePushContext.Provider>\r\n\t\t</PostDatastoreContext.Provider>\r\n\t);\r\n}","import { useRef, useState, useEffect } from 'react';\r\nimport { useAuth } from 'Context/AuthContext';\r\nimport { useUserDatastore, useUserDatastoreUpdateUser } from 'Context/UserDatastoreContext';\r\n\r\nfunction EditProfileDialog(props){\r\n\tconst containerRef = useRef();\r\n\tconst newPasswordRef = useRef();\r\n\tconst oldPasswordRef = useRef();\r\n\r\n\tconst auth = useAuth();\r\n\tconst userDatastore = useUserDatastore();\r\n\tconst updateUserInUserDatastore = useUserDatastoreUpdateUser();\r\n\r\n\tconst user = userDatastore.find(object => object.email === auth.email);\r\n\r\n\tconst [userName, setUserName] = useState(\"\");\r\n\tconst [oldPassword, setOldPassword] = useState(\"\");\r\n\tconst [newPassword, setNewPassword] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tif (user !== undefined) {\r\n\t\t\tsetUserName(user.name);\r\n\t\t}\r\n\t}, [user]);\r\n\r\n\tconst handleClick = (event) => {\r\n\t\tprops.toggleVisible(false);\r\n\t}\r\n\r\n\tconst checkClickClose = (event) => {\r\n\t\tif (event.target === containerRef.current && containerRef.current.contains(event.target)) {\r\n\t\t\tprops.toggleVisible(false);\r\n\t\t}\r\n\t}\r\n\r\n\tconst updateName = () => {\r\n\t\tif (userName.trim() === \"\") {\r\n\t\t\t// Name is empty, alert error and return.\r\n\t\t\talert(\"Name can't be empty\");\r\n\t\t\treturn; \r\n\t\t}\r\n\t\tlet updatedUser = {\r\n\t\t\tname: userName,\r\n\t\t\temail: user.email,\r\n\t\t\tpassword: user.password,\r\n\t\t\tcreatedAt: user.createdAt,\r\n\t\t}\r\n\t\tupdateUserInUserDatastore(updatedUser);\r\n\t\talert('The name has been updated');\r\n\t}\r\n\r\n\tconst updatePassword = (event) => {\r\n\t\tif (oldPassword.trim() === \"\") {\r\n\t\t\talert(\"Old password can't be empty.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (newPassword.trim() === \"\") {\r\n\t\t\talert(\"New password can't be empty.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (oldPassword === user.password) {\r\n\t\t\t// valdiate new password for security.\r\n\t\t\tif(\r\n\t\t\t\t// false\r\n\t\t\t\tnewPassword.length < 6 || // Is at least 6 characters long\r\n\t\t\t\t!newPassword.match(/[a-z]/) || // Contains at least 1 lowercase letter\r\n\t\t\t\t!newPassword.match(/[A-Z]/) || // Contains at least 1 uppercase letter\r\n\t\t\t\t!newPassword.match(/[0-9]/) || // Contains at least one number\r\n\t\t\t\t!newPassword.match(/[\\W_]/) // Contains at least one special character including an underscore\r\n\t\t\t){\r\n\t\t\t\talert('Password needs to be at least 6 characters including uppercase, lowercase characters, and a number and a punctuation.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Everything is okay, change the password.\r\n\t\t\tlet updatedUser = {\r\n\t\t\t\tname: user.name,\r\n\t\t\t\temail: user.email,\r\n\t\t\t\tpassword: newPassword,\r\n\t\t\t\tcreatedAt: user.createdAt,\r\n\t\t\t}\r\n\r\n\t\t\tupdateUserInUserDatastore(updatedUser);\r\n\t\t\talert('The password has been updated');\r\n\t\t\t\r\n\t\t\t//Reset field values.\r\n\t\t\tsetNewPassword(\"\");\r\n\t\t\tsetOldPassword(\"\");\r\n\t\t\toldPasswordRef.current.value = \"\";\r\n\t\t\tnewPasswordRef.current.value = \"\";\r\n\t\t} else {\r\n\t\t\talert (\"Old password doesn't match our records\");\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"router-page-profile--component-edit-profile-dialog dialog-container\" onClick={checkClickClose} ref={containerRef}>\r\n\t\t\t<div className=\"dialog custom-scrollbar\">\r\n\t\t\t\t<div className=\"top-bar\">\r\n\t\t\t\t\t<h1>Edit your details</h1>\r\n\t\t\t\t\t<button className=\"btn lightRed small\" onClick={handleClick}><i className=\"fa fa-window-close\"></i>Close</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"input-fields mt-20\">\r\n\t\t\t\t\t<label>Name</label>\r\n\t\t\t\t\t<input type=\"text\" className=\"text-input full-width mt-10\" value={userName} onChange={e => setUserName(e.target.value)} onKeyDown={(e) => {if(e.keyCode === 13) updateName()}}/>\r\n\t\t\t\t\t<button className=\"btn mt-10 full-width\" onClick={updateName}><i className=\"fa fa-sync-alt\"></i>Update name</button>\r\n\r\n\t\t\t\t\t<h1 className=\"mt-20\"><i className=\"fa fa-key\"></i>Change password</h1>\r\n\t\t\t\t\t<input type=\"password\" className=\"text-input full-width mt-10\" onChange={e => setOldPassword(e.target.value)} placeholder=\"Old password\" ref={oldPasswordRef}/>\r\n\t\t\t\t\t<input type=\"password\" className=\"text-input full-width mt-10\" onChange={e => setNewPassword(e.target.value)} placeholder=\"New password\" ref={newPasswordRef}/>\r\n\r\n\t\t\t\t\t<button className=\"btn mt-10 full-width\" onClick={updatePassword}><i className=\"fa fa-sync-alt\"></i>Update password</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default EditProfileDialog;","import './Avatar.scss';\r\n\r\n/*\r\n\tA default avatar component that can be reused throughout the app. Uses a hash based on the seed prop supplied to generate the image.\r\n\tAPI used: https://avatars.dicebear.com. Free for commercial and personal use.\r\n*/\r\n\r\nfunction Avatar(props){\r\n\treturn (\r\n\t\t<div className={`app-common-component--avatar-container ${(props.size === \"small\") ? 'small ': ''}`}>\r\n\r\n\t\t\t<img src={\"https://avatars.dicebear.com/api/bottts/\" + hashString(props.seed) + '.svg'} alt=\"User avatar\"/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Avatar;\r\n\r\nconst hashString = str => {\r\n\tlet hash = 0;\r\n\tfor (let i = 0; i < str.length; i++) {\r\n\t\tconst char = str.charCodeAt(i);\r\n\t\thash = (hash << 5) - hash + char;\r\n\t\thash &= hash;\r\n\t}\r\n\treturn new Uint32Array([hash])[0].toString(36);\r\n};","import { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useAuth, useAuthUpdate } from 'Context/AuthContext';\r\nimport { useUserDatastore, useUserDatastorePull } from 'Context/UserDatastoreContext';\r\nimport { usePostDatastorePull } from 'Context/PostDatastoreContext';\r\n\r\nimport \"./Profile.scss\";\r\n\r\nimport EditProfileDialog from './EditProfileDialog';\r\nimport Avatar from 'App/Common/Avatar/Avatar';\r\n\r\nfunction Profile() {\r\n\tconst auth = useAuth();\r\n\tconst updateAuth = useAuthUpdate();\r\n\r\n\tconst userDatastore = useUserDatastore();\r\n\tconst pullFromUserDatastore = useUserDatastorePull();\r\n\tconst pullFromPostDatastore = usePostDatastorePull();\r\n\r\n\tlet user = userDatastore.find(object => object.email === auth.email);\r\n\t\r\n\tconst [userName, setUserName] = useState(\"\");\r\n\tconst [userCreatedAt, setUserCreatedAt] = useState(\"\");\r\n\tconst [userEmail, setUserEmail] = useState(\"\");\r\n\r\n\tconst [editProfileDialogVisible, setEditProfileDialogVisible] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif((user !== undefined)){\r\n\t\t\tsetUserName(user.name);\r\n\t\t\tsetUserCreatedAt(user.createdAt);\r\n\t\t\tsetUserEmail(user.email);\r\n\t\t}\r\n\t}, [user]);\r\n\r\n\tconst handleDeleteProfile = () => {\r\n\t\tif(window.confirm(\"Are you sure you want to delete your profile? This will also delete all your posts.\")){\r\n\t\t\tpullFromUserDatastore(user.email);\r\n\t\t\tpullFromPostDatastore(user.email, true);\r\n\t\t\tupdateAuth({auth: false, email: null}); //Log user out.\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"router-page-profile-container\">\r\n\t\t\t<section>\r\n\t\t\t\t{\r\n\t\t\t\t\teditProfileDialogVisible &&\r\n\t\t\t\t\t<EditProfileDialog visible={editProfileDialogVisible} toggleVisible={(state) => setEditProfileDialogVisible(state)}/>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\t// If the user is not authenticated, redirect to the sign in page.\r\n\t\t\t\t\t!auth.auth && <Redirect to=\"/signin\"></Redirect>\r\n\t\t\t\t}\r\n\t\t\t\t<h1>Your profile</h1>\r\n\t\t\t\t<div className=\"profile-details\">\r\n\t\t\t\t\t<Avatar seed={userEmail}/>\r\n\t\t\t\t\t<section className=\"mt-10\">\r\n\t\t\t\t\t\t<p className=\"text primary bold\">{userName}</p>\r\n\t\t\t\t\t\t<p className=\"text primary bold\">{userEmail}</p>\r\n\t\t\t\t\t\t<p>Joined: <span className=\"text primary bold\">{userCreatedAt}</span></p>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<button className=\"btn mt-20\" onClick={() => setEditProfileDialogVisible(true)}><i className=\"fa fa-edit\"></i>Edit profile</button>\r\n\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t<button className=\"btn red mt-20\" onClick={handleDeleteProfile}><i className=\"fa fa-trash-alt\"></i>Delete profile</button>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Profile;","export default __webpack_public_path__ + \"static/media/image-preview.127d3220.svg\";","import { useRef, useState } from 'react';\r\nimport imagePreviewSVG from 'img/svg/image-preview.svg';\r\n\r\nfunction ChoosePictureDialog(props){\r\n\tconst [imgURLInput, setImgURLInput] = useState(\"\");\r\n\r\n\tconst [generatedImgURL, setGeneratedImgURL] = useState();\r\n\tconst [imgLoadError, setImgLoadError] = useState(true);\r\n\r\n\tconst containerRef = useRef();\r\n\t\r\n\tconst handleClick = (event) => {\r\n\t\tprops.toggleVisible(false);\r\n\t}\r\n\r\n\tconst checkClickClose = (event) => {\r\n\t\tif (event.target === containerRef.current && containerRef.current.contains(event.target)) {\r\n\t\t\tprops.toggleVisible(false);\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleLoadImage = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tsetGeneratedImgURL(imgURLInput);\r\n\t}\r\n\r\n\tconst handleAddImageToPost = (event) => {\r\n\t\tif (imgLoadError) {\r\n\t\t\talert(\"That is not a valid image\");\r\n\t\t} else {\r\n\t\t\tprops.setPostImgSrc(generatedImgURL);\r\n\t\t\tprops.toggleVisible(false);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"router-page-posts--component-choose-picture-dialog dialog-container\" onClick={checkClickClose} ref={containerRef}>\r\n\t\t\t<div className=\"dialog custom-scrollbar\">\r\n\t\t\t\t<div className=\"top-bar\">\r\n\t\t\t\t\t<h1>Choose a picture</h1>\r\n\t\t\t\t\t<button className=\"btn lightRed small\" onClick={handleClick}><i className=\"fa fa-window-close\"></i>Close</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<form onSubmit={handleLoadImage}>\r\n\t\t\t\t\t<input onChange={e => setImgURLInput(e.target.value)} type=\"url\" className=\"text-input full-width mt-20\" placeholder=\"URL of image\" required/>\r\n\t\t\t\t\t<button type=\"submit\" className=\"btn mt-20 full-width\"><i className=\"fa fa-download\"></i>Load image</button>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t\t{/* Conditionally add the .img-error class which sets the display to 'none' in case on an error. */}\r\n\t\t\t\t<img className={`${(imgLoadError ? 'img-error':'')}`} onLoad={() => setImgLoadError(false)} onError={() => setImgLoadError(true)} src={generatedImgURL} alt=\"Post\" />\r\n\t\t\t\t\r\n\t\t\t\t{\r\n\t\t\t\t\timgLoadError &&\r\n\t\t\t\t\t<img src={imagePreviewSVG} alt=\"Preview\" />\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<button onClick={handleAddImageToPost} className=\"btn full-width mt-20\"><i className=\"fa fa-plus-square\"></i>Add image to post</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ChoosePictureDialog;","import { useState, useEffect, useRef } from 'react';\r\nimport { useAuth } from 'Context/AuthContext';\r\nimport Avatar from 'App/Common/Avatar/Avatar';\r\nimport { usePostDatastorePush } from 'Context/PostDatastoreContext';\r\nimport ChoosePictureDialog from './ChoosePictureDialog';\r\nimport _ from 'lodash';\r\n\r\nfunction NewPost(props){\r\n\tconst textareaRef = useRef();\r\n\tconst [postText, setPostText] = useState(\"\");\r\n\tconst pushToPostDatastore = usePostDatastorePush();\r\n\tconst [choosePictureDialogVisible, setChoosePictureDialogVisible] = useState(false);\r\n\tconst [postImageSrc, setPostImgSrc] = useState(\"\");\r\n\r\n\tconst auth = useAuth();\r\n\tconst [userEmail, setUserEmail] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tif((auth.email !== undefined)){\r\n\t\t\tsetUserEmail(auth.email);\r\n\t\t}\r\n\t}, [auth]);\r\n\r\n\tconst createPostHandle = () => {\r\n\t\tif (postText.trim() === \"\") {\r\n\t\t\talert(\"Post can't be empty.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet post =  {\r\n\t\t\t\"post_id\": auth.email + new Date().getTime(),\r\n\t\t\t\"user_id\": auth.email,\r\n\t\t\t\"content\": postText,\r\n\t\t\t\"img\": postImageSrc,\r\n\t\t\t\"createdAt\": new Date().toDateString()\r\n\t\t}\r\n\r\n\t\tpushToPostDatastore(post);\r\n\r\n\t\t//Reset field values.\r\n\t\tsetPostText(\"\");\r\n\t\tsetPostImgSrc(\"\");\r\n\t\ttextareaRef.current.value = \"\";\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className=\"router-page-posts--component-new-post\">\r\n\t\t\t{\r\n\t\t\t\tchoosePictureDialogVisible &&\r\n\t\t\t\t<ChoosePictureDialog visible={choosePictureDialogVisible} setPostImgSrc={(state) => setPostImgSrc(state)} toggleVisible={(state) => setChoosePictureDialogVisible(state)} />\r\n\t\t\t}\r\n\r\n\t\t\t<h1 style={{ textAlign: 'center' }}><i className=\"fa fa-pen-alt\"></i>Write a post</h1>\r\n\r\n\t\t\t<div className=\"user-details\">\r\n\t\t\t\t<Avatar seed={userEmail} size=\"small\" />\r\n\t\t\t\t<p>{props.userName}</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"form\">\r\n\t\t\t\t<textarea ref={textareaRef} onChange={e => setPostText(e.target.value)} placeholder=\"Share your thoughts...\"></textarea>\r\n\t\t\t\t<div className=\"picture mt-10\">\r\n\t\t\t\t\t<button className=\"btn small darkBlack\" onClick={() => setChoosePictureDialogVisible(true)}><i className=\"fa fa-camera\"></i>Choose a picture</button>\r\n\t\t\t\t\t\r\n\t\t\t\t\t{/* Use Lodash to trunate the URL to 40 characters */}\r\n\t\t\t\t\t<p>{_.truncate(postImageSrc, {length: 40})}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button onClick={createPostHandle} className=\"btn full-width mt-20\"><i className=\"fa fa-paper-plane\"></i>Post</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default NewPost;","import { useState, useRef } from 'react';\r\nimport _ from 'lodash';\r\nimport ChoosePictureDialog from './ChoosePictureDialog';\r\nimport { usePostDatastoreUpdatePost } from 'Context/PostDatastoreContext';\r\n\r\nfunction EditPostDialog(props){\r\n\tconst containerRef = useRef();\r\n\tconst [postText, setPostText] = useState(props.post.content);\r\n\tconst [choosePictureDialogVisible, setChoosePictureDialogVisible] = useState(false);\r\n\tconst [postImageSrc, setPostImgSrc] = useState(props.post.img);\r\n\tconst updatePostInDatastore = usePostDatastoreUpdatePost();\r\n\r\n\tconst handleClickClose = (event) => {\r\n\t\tprops.toggleVisible(false);\r\n\t}\r\n\r\n\tconst checkClickClose = (event) => {\r\n\t\tif (event.target === containerRef.current && containerRef.current.contains(event.target)) {\r\n\t\t\tprops.toggleVisible(false);\r\n\t\t}\r\n\t}\r\n\r\n\tconst updatePostHandle = () => {\r\n\t\tif (postText.trim() === \"\") {\r\n\t\t\talert(\"Post can't be empty.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet post =  {\r\n\t\t\t\"post_id\": props.post.post_id,\r\n\t\t\t\"user_id\": props.postUser.email,\r\n\t\t\t\"content\": postText,\r\n\t\t\t\"img\": postImageSrc,\r\n\t\t\t\"createdAt\": props.post.createdAt,\r\n\t\t}\r\n\t\tupdatePostInDatastore(post);\r\n\t\t\r\n\t\t//Reset field values.\r\n\t\tsetPostText(\"\");\r\n\t\tsetPostImgSrc(\"\");\r\n\t\tprops.toggleVisible(false);\r\n\t\talert(\"Post updated\");\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className=\"router-page-posts--component-edit-post-dialog dialog-container\" onClick={checkClickClose} ref={containerRef}>\r\n\t\t\t{\r\n\t\t\t\tchoosePictureDialogVisible &&\r\n\t\t\t\t<ChoosePictureDialog visible={choosePictureDialogVisible} setPostImgSrc={(state) => setPostImgSrc(state)} toggleVisible={(state) => setChoosePictureDialogVisible(state)} />\r\n\t\t\t}\r\n\t\t\t<div className=\"dialog\">\r\n\t\t\t\t<div className=\"top-bar\">\r\n\t\t\t\t\t<h1>Edit your post</h1>\r\n\t\t\t\t\t<button className=\"btn lightRed small\" onClick={handleClickClose}><i className=\"fa fa-window-close\"></i>Cancel</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form mt-20\">\r\n\t\t\t\t\t<textarea value={postText} onChange={e => setPostText(e.target.value)} placeholder=\"Share your thoughts...\"></textarea>\r\n\t\t\t\t\t<div className=\"picture mt-10\">\r\n\t\t\t\t\t\t<button className=\"btn small darkBlack\" onClick={() => setChoosePictureDialogVisible(true)}><i className=\"fa fa-camera\"></i>Choose a picture</button>\r\n\r\n\t\t\t\t\t\t{/* Use Lodash to truncate the URL to 20 characters */}\r\n\t\t\t\t\t\t<p>{_.truncate(postImageSrc, {length: 20})}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button onClick={updatePostHandle} className=\"btn full-width mt-20\"><i className=\"fa fa-sync\"></i>Update</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default EditPostDialog;","import { useState, useEffect } from 'react';\r\nimport { useAuth } from 'Context/AuthContext';\r\nimport { useUserDatastore } from 'Context/UserDatastoreContext';\r\nimport { usePostDatastorePull } from 'Context/PostDatastoreContext';\r\n\r\nimport Avatar from 'App/Common/Avatar/Avatar';\r\nimport EditPostDialog from './EditPostDialog';\r\n\r\nfunction IndividualPost(props){\r\n\tconst auth = useAuth();\r\n\tconst userDatastore = useUserDatastore();\r\n\tconst pullFromPostDatastore = usePostDatastorePull();\r\n\r\n\tlet postUser = userDatastore.find(object => object.email === props.post.user_id);\r\n\tconst [userName, setUserName] = useState(\"\");\r\n\tconst [userEmail, setUserEmail] = useState(\"\");\r\n\tconst [editPostDialogVisible, setEditPostDialogVisible] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif((postUser !== undefined)){\t\t\t\r\n\t\t\tsetUserName(postUser.name);\r\n\t\t\tsetUserEmail(postUser.email);\r\n\t\t}\r\n\t}, [postUser]);\r\n\r\n\tconst handleDelete = () => {\r\n\t\tif (window.confirm(\"Are you sure you want to delete this post?\")) {\r\n\t\t\tpullFromPostDatastore(props.post.post_id);\r\n\t\t}\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className=\"router-page-posts--component-individual-post\">\r\n\t\t\t{\r\n\t\t\t\teditPostDialogVisible &&\r\n\t\t\t\t<EditPostDialog postUser={postUser} post={props.post} toggleVisible={(state) => setEditPostDialogVisible(state)} />\r\n\t\t\t}\r\n\t\t\t<div className=\"top-bar\">\r\n\t\t\t\t<Avatar seed={userEmail} size=\"small\"/>\r\n\t\t\t\t<p>Written by {userName}</p>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"content custom-scrollbar\">\r\n\t\t\t\t<h1>{props.post.content}</h1>\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\t(props.post.img !== \"\" && props.post.img !== undefined) &&\r\n\t\t\t\t\t<img src={props.post.img} alt=\"Post\" />\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"buttons mt-20\">\r\n\t\t\t\t<button className=\"btn\"><i className=\"fa fa-reply\"></i>Reply</button>\r\n\t\t\t\t{auth.email === props.post.user_id &&\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button className=\"btn\" onClick={() => setEditPostDialogVisible(true)}><i className=\"fa fa-edit\"></i>Edit</button>\r\n\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t<button className=\"btn red\" onClick={handleDelete}><i className=\"fa fa-trash-alt\"></i>Delete</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default IndividualPost;","import { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useAuth } from 'Context/AuthContext';\r\nimport { useUserDatastore } from 'Context/UserDatastoreContext';\r\nimport { usePostDatastore } from 'Context/PostDatastoreContext';\r\n\r\nimport './Posts.scss';\r\nimport NewPost from './NewPost';\r\nimport IndividualPost from './IndividualPost';\r\nimport _ from 'lodash';\r\n\r\nfunction Posts(){\r\n\tconst auth = useAuth();\r\n\tconst userDatastore = useUserDatastore();\r\n\tconst postDatastore = usePostDatastore();\r\n\t\r\n\tlet user = userDatastore.find(object => object.email === auth.email);\r\n\t\r\n\tconst [userName, setUserName] = useState(\"\");\r\n\tconst [userEmail, setUserEmail] = useState(\"\");\r\n\r\n\tconst [showOwnPostsOnly, updateShowOwnPostsOnly] = useState(false);\r\n\tconst [userOwnPostDatastore, updateUserOwnPostDatastore] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif((user !== undefined)){\r\n\t\t\tsetUserName(user.name);\r\n\t\t\tsetUserEmail(user.email);\r\n\t\t}\r\n\t}, [user]);\r\n\r\n\tuseEffect(() => {\r\n\t\tupdateUserOwnPostDatastore(_.filter(postDatastore, (post) => {\r\n\t\t\treturn post.user_id === userEmail;\r\n\t\t}));\r\n\t}, [postDatastore, userEmail]);\r\n\r\n\treturn (\r\n\t\t<div className=\"router-page-posts-container\">\r\n\t\t\t<section>\r\n\t\t\t\t{\r\n\t\t\t\t\t// If the user is not authenticated, redirect to the sign in page.\r\n\t\t\t\t\t!auth.auth && <Redirect to=\"/signin\"></Redirect>\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<NewPost userName={userName} />\r\n\r\n\t\t\t\t<h1 className=\"mt-30\"><i className=\"fa fa-clipboard-list\"></i>All posts</h1>\r\n\t\t\t\t<label className=\"mt-10\" style={{ 'display': 'inline-block' }}>Only show posts made by me <input onChange={(e) => updateShowOwnPostsOnly(e.target.checked)} checked={showOwnPostsOnly} type=\"checkbox\" /></label>\r\n\t\t\t\t\r\n\t\t\t\t<section>\r\n\t\t\t\t\t{!showOwnPostsOnly &&\r\n\t\t\t\t\t\tpostDatastore.map((post, key) => \r\n\t\t\t\t\t\t\t<IndividualPost key={key} post={post} />\r\n\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t//TODO show with replies\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t{showOwnPostsOnly &&\r\n\t\t\t\t\t\tuserOwnPostDatastore.map((post, key) => \r\n\t\t\t\t\t\t\t<IndividualPost key={key} post={post} />\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(postDatastore.length === 0) &&\r\n\t\t\t\t\t\t<p className=\"mt-30 text primary\">No posts yet. Be the first to share!</p>\r\n\t\t\t\t\t}\r\n\t\t\t\t</section>\r\n\t\t\t</section>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Posts;","import { Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from './Home/Home';\r\nimport SignIn from './SignIn/SignIn';\r\nimport SignUp from './SignUp/SignUp';\r\nimport Logout from './Logout/Logout';\r\nimport Profile from './Profile/Profile';\r\nimport Posts from './Posts/Posts';\r\n\r\nfunction RouterSwitch(){\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route path=\"/signin\">\r\n\t\t\t\t<SignIn />\r\n\t\t\t</Route>\r\n\t\t\t<Route path=\"/signup\">\r\n\t\t\t\t<SignUp />\r\n\t\t\t</Route>\r\n\t\t\t<Route path=\"/logout\">\r\n\t\t\t\t<Logout />\r\n\t\t\t</Route>\r\n\t\t\t<Route path=\"/profile\">\r\n\t\t\t\t<Profile />\r\n\t\t\t</Route>\r\n\t\t\t<Route path=\"/posts\">\r\n\t\t\t\t<Posts />\r\n\t\t\t</Route>\r\n\t\t\t<Route path=\"/\">\r\n\t\t\t\t<Home />\r\n\t\t\t</Route>\r\n\t\t</Switch>\r\n\t);\r\n}\r\n\r\nexport default RouterSwitch;","import { Link } from 'react-router-dom';\r\nimport { useAuth } from 'Context/AuthContext';\r\n\r\nfunction TopBar(){\r\n\tconst auth = useAuth();\r\n\r\n\treturn (\r\n\t\t<header className=\"top-bar-header\">\r\n\t\t\t<Link to=\"/\" className=\"heading\"><img src=\"/img/logos/xhdpi.png\" alt=\"App logo\"/>Vibe Check</Link>\r\n\r\n\t\t\t{auth.auth && //Render only if the user is Authenticated\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<Link to=\"/posts\">Posts</Link>\r\n\t\t\t\t\t<Link to=\"/profile\">My profile</Link>\r\n\t\t\t\t\t<Link to=\"/logout\">Logout</Link>\r\n\t\t\t\t</nav>\r\n\t\t\t}\r\n\r\n\t\t\t{!auth.auth && //Render only if the user is not Authenticated\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<Link to=\"/signup\">Sign up</Link>\r\n\t\t\t\t\t<Link to=\"/signin\">Sign in</Link>\r\n\t\t\t\t</nav>\r\n\t\t\t}\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\n\r\nexport default TopBar;","import { BrowserRouter as Router } from \"react-router-dom\";\r\nimport './App.scss';\r\n\r\nimport RouterSwitch from './Router/RouterSwitch';\r\nimport TopBar  from \"./TopBar\";\r\n\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"app-container\">\r\n\t\t\t<Router>\r\n\t\t\t\t<TopBar />\r\n\t\t\t\t\r\n\t\t\t\t<section className=\"router-container custom-scrollbar\">\r\n\t\t\t\t\t<RouterSwitch />\r\n\t\t\t\t</section>\r\n\r\n\t\t\t\t<footer className=\"footer\">\r\n\t\t\t\t\t&copy; Vibe Check, {new Date().getFullYear()}\r\n\t\t\t\t</footer>\r\n\t\t\t</Router>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './scss/index.scss';\nimport App from './App/App';\n\nimport reportWebVitals from './reportWebVitals';\nimport { PostDatastoreProvider } from 'Context/PostDatastoreContext';\nimport { UserDatastoreProvider } from 'Context/UserDatastoreContext';\nimport { AuthProvider } from 'Context/AuthContext';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<PostDatastoreProvider>\n\t\t\t<UserDatastoreProvider>\n\t\t\t\t<AuthProvider>\n\t\t\t\t\t<App />\n\t\t\t\t</AuthProvider>\n\t\t\t</UserDatastoreProvider>\n\t\t</PostDatastoreProvider>\n\t</React.StrictMode>,\n\t\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}